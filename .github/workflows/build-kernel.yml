name: gki-kernel-buildOS


on:
  workflow_dispatch:

 
jobs:
  build-kernel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup environment
        run: |
          echo "KERNEL_SOURCE=$(cat common_config.env | grep -w "KERNEL_SOURCE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "KERNEL_SOURCE_BRANCH=$(cat common_config.env | grep -w "KERNEL_SOURCE_BRANCH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "正在更新环境"
          sudo apt-get update -y
          sudo apt-get install -y ccache lzop cpio bzip2 zip flex bison gperf
          
      - name: Pull toolchain and kernel
        run: |
          echo "开始链接工具"
          cd manifests
          paths=$(pwd)"/manifest_prebuilts.xml"
          cd ..
          mkdir android-kernel && cd android-kernel
          curl https://storage.googleapis.com/git-repo-downloads/repo > repo && chmod +x ./repo
          ./repo init -u https://android.googlesource.com/kernel/manifest
          cp $paths .repo/manifests/
          ./repo init -m manifest_prebuilts.xml
          ./repo sync -c -j$(($(getconf _NPROCESSORS_ONLN) * 2))
          echo "检查工具完整性"
          ./repo sync && ls
          echo "开始链接内核"
          git clone --depth=1 ${{ env.KERNEL_SOURCE }} -b ${{ env.KERNEL_SOURCE_BRANCH }} common
          
          
      - name: Build kernel
        run: |
          echo "开始构建内核" 
          cd android-kernel
          if [[ -f build/build.sh ]];then
            LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh -j$(($(getconf _NPROCESSORS_ONLN) * 2))
          fi
          
      - name: Package kernel
        run: |
          mkdir kernel
          paths=$(pwd)
          cd android-kernel/out/*/common/arch/arm64/boot/
          if [[ -f Image.gz-dtb ]]; then
            echo "压缩格式：Image.gz-dtb" && cd $paths && cp android-kernel/out/*/common/arch/arm64/boot/Image.gz-dtb kernel/
          elif [[ -f Image-dtb ]]; then
            echo "压缩格式：Image-dtb" && cd $paths && cp android-kernel/out/*/common/arch/arm64/boot/Image-dtb kernel/
          elif [[ -f Image.gz ]]; then
            echo "压缩格式：Image.gz" && cd $paths && cp android-kernel/out/*/common/arch/arm64/boot/Image.gz kernel/
          elif [[ -f Image ]]; then
            echo "压缩格式：Image" && cd $paths && cp android-kernel/out/*/common/arch/arm64/boot/Image kernel/
          fi
          cd kernel && ls

      - name: Upload kernel to artifact
        uses: actions/upload-artifact@v3
        with:
          name: gki-kernel
          path: kernel/*

